@page "/clients/create"
@inject IRepository repository
@inject NavigationManager navigationManager
@inject SweetAlertService sweetAlertService
@attribute [Authorize]

<div class="mt-5 flex justify-end xl:justify-center pe-3 sm:pe-5 mb-2">

    <h2 class="text-xl font-bold leading-7 text-gray-900">Criar novo cliente</h2>
</div>

<ClientsForm @ref="ClientForm" Client="Client" OnValidSubmit="CreateAsync" ReturnAction="Return" />

@code {
    private Client Client = new();
    private ClientsForm? ClientForm;

    private async Task CreateAsync()
    {
        // Client.City = null;
        // Client.User = null;
        var httpResponse = await repository.Post("/api/clients", Client);
        if(httpResponse.Error)
        {
            var message = await httpResponse.GetErrorMessageAsync();
            await sweetAlertService.FireAsync("Error", message, SweetAlertIcon.Error);
            return;
        }
        else
            await sweetAlertService.FireAsync("Sucesso!", "Client salvo!", SweetAlertIcon.Success);
        Return();
    }

    private void Return()
    {
        ClientForm!.FormPostedSuccessfully = true;
        navigationManager.NavigateTo("/clients");
    }
}
