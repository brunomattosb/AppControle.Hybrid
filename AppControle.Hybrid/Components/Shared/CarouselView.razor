@inject IJSRuntime Js

@if (countImages > 1)
{
    
    <div id="controls-carousel" class="relative w-full" data-carousel="static">

        <div class="relative h-56 overflow-hidden rounded-lg md:h-96">
        
            @foreach (var image in Images)
            {
                @if (image.StartsWith("https://sales2023.blob.core.windows.net/products/"))
                {
                    if (first)
                    {
                        <div class="hidden duration-700 ease-in-out" data-carousel-item="active">
                            <img src="@image" class="absolute block -translate-x-1/2 -translate-y-1/2 top-1/2 left-1/2" alt="...">
                        </div>
                    }
                    else
                    {
                        <div class="hidden duration-700 ease-in-out" data-carousel-item>
                            <img src="@image" class="absolute block -translate-x-1/2 -translate-y-1/2 top-1/2 left-1/2" alt="...">
                        </div>
                    }

                    first = false;
                }
                else
                {
                    <div class="hidden duration-700 ease-in-out" data-carousel-item>
                        <img src="data:image/jpeg;base64, @image" class="absolute block -translate-x-1/2 -translate-y-1/2 top-1/2 left-1/2" alt="...">
                    </div>                    
                }
        }

        </div>
        <!-- Slider controls -->
        <button type="button" class=" absolute top-0 start-0 z-30 flex items-center justify-center h-full px-4 cursor-pointer group focus:outline-none" data-carousel-prev>
            <span class="inline-flex items-center justify-center w-10 h-10 rounded-full bg-gray-200/30 dark:bg-gray-800/30 group-hover:bg-white/50 dark:group-hover:bg-gray-800/60 group-focus:ring-4 group-focus:ring-white dark:group-focus:ring-gray-800/70 group-focus:outline-none">
                <svg class=" w-4 h-4 text-blue-500 dark:text-gray-800 rtl:rotate-180" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 6 10">
                    <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 1 1 5l4 4" />
                </svg>
            <span class=" sr-only">Previous</span>
            </span>
        </button>
        <button type="button" class="absolute top-0 end-0 z-30 flex items-center justify-center h-full px-4 cursor-pointer group focus:outline-none" data-carousel-next>
            <span class="inline-flex items-center justify-center w-10 h-10 rounded-full bg-gray-200/30 dark:bg-gray-800/30 group-hover:bg-white/50 dark:group-hover:bg-gray-800/60 group-focus:ring-4 group-focus:ring-white dark:group-focus:ring-gray-800/70 group-focus:outline-none">
                <svg class="w-4 h-4 text-blue-500 dark:text-gray-800 rtl:rotate-180" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 6 10">
                    <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="m1 9 4-4-4-4" />
                </svg>
                <span class="sr-only">Next</span>
            </span>
        </button>
    </div>
}
else
{
    @if (countImages == 1)
    {
        @if (Images[0].StartsWith("https://sales2023.blob.core.windows.net/products/"))
        {
            <div>
                <div class="m-1">
                    <img src="@Images[0]" style="width:400px" />
                </div>
            </div>
        }
        else
        {
            <div>
                <div class="m-1">
                    <img src="data:image/jpeg;base64, @Images[0]" style="width:400px" />
                </div>
            </div>
        }
    }
}

@code {
    public bool first = true;

    [EditorRequired]
    [Parameter]
    public List<string> Images { get; set; } = null!;

    public int countImages = 0;

    protected override async Task OnAfterRenderAsync(bool isFirstRender)
    {
        await Js.InvokeVoidAsync("window.initializeFlowbite");
    }

    protected override void OnParametersSet()
    {
        countImages = Images.Count();
    }
}
